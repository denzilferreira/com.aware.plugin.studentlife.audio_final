
apply plugin: 'com.android.library'

android {
    compileSdkVersion compile_sdk
    buildToolsVersion build_tools

    defaultConfig {
        minSdkVersion minimum_sdk
        targetSdkVersion target_sdk
        versionCode version_code
        versionName version_readable

        resValue "string", "provider_conversations", "com.aware.plugin.studentlife.audio_final.provider.audio_final"
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            java.srcDirs += '../com.aware.plugin.studentlife.audio/src/main/java'
            res.srcDirs += '../com.aware.plugin.studentlife.audio/src/main/res'
            manifest.srcFile '../com.aware.plugin.studentlife.audio/src/main/AndroidManifest.xml'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

if (System.getenv("storeFile") != null && System.getenv("storePassword") != null && System.getenv("keyAlias") != null && System.getenv("keyPassword") != null) {
    android.signingConfigs.release.storeFile = file(System.getenv("storeFile"))
    android.signingConfigs.release.storePassword = System.getenv("storePassword")
    android.signingConfigs.release.keyAlias = System.getenv("keyAlias")
    android.signingConfigs.release.keyPassword = System.getenv("keyPassword")
} else {
    println("No keystore defined. Unsigned!")
    android.buildTypes.release.signingConfig = null
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation files('lib/armeabi.jar')
    api "com.github.denzilferreira:aware-client:$aware_libs"
}
